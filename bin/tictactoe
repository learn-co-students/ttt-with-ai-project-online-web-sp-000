#!/usr/bin/env ruby

require_relative '../config/environment'


#Greet the user with a message.
puts "Welcome!"

#Prompt the user for what kind of game they want to play, 0,1, or 2 player.
puts "How many people are playing?"
player_input = gets
board = Board.new

#Use the input to correctly initialize a Game with the appropriate player types and token values.
##Ask the user for who should go first and be "X".
if player_input.to_i == 1
  puts "Who should go first and be 'X'? You or the computer? Please enter Me or Computer."
  player_1_input = gets
  if player_1_input.strip == 'Computer'
      player_1 = Players::Computer.new("X")
      player_2 = Players::Human.new("O")
  elsif player_1_input.strip == 'Me'
      player_1 = Players::Human.new("X")
      player_2 = Players::Computer.new("O")
  end
elsif player_input.to_i == 0
  player_1 = Players::Computer.new("X")
  player_2 = Players::Computer.new("O")
elsif player_input.to_i == 2
  player_1 = Players::Human.new("X")
  player_2 = Players::Human.new("O")
end
  
#Use the input to correctly initialize a Game with the appropriate player types and token values.

board = Board.new

game = Game.new(player_1, player_2, board)

game.play

#When the game is over, the CLI should prompt the user if they would like to play again and allow them to choose a new configuration for the game as described above. If the user doesn't want to play again, exit the program.

loop do
  puts "Would you like to play again? Please enter Yes or No."
  game_input = gets
  if game_input.strip != 'Yes'
    puts "Thanks for playing!"
    break
  elsif game_input.strip == 'Yes'
    #Prompt the user for what kind of game they want to play, 0,1, or 2 player.
    puts "How many people are playing?"
    player_input = gets
    board = Board.new

  #Use the input to correctly initialize a Game with the appropriate player types and token values.
  ##Ask the user for who should go first and be "X".
    if player_input.to_i == 1
      puts "Who should go first and be 'X'? You or the computer? Please enter Me or Computer."
      player_1_input = gets
      if player_1_input.strip == 'Computer'
        player_1 = Players::Computer.new("X")
        player_2 = Players::Human.new("O")
      elsif player_1_input.strip == 'Me'
        player_1 = Players::Human.new("X")
        player_2 = Players::Computer.new("O")
      end
    elsif player_input.to_i == 0
      player_1 = Players::Computer.new("X")
      player_2 = Players::Computer.new("O")
    elsif player_input.to_i == 2
      player_1 = Players::Human.new("X")
      player_2 = Players::Human.new("O")
    end
  
  #Use the input to correctly initialize a Game with the appropriate player types and token values.

  board = Board.new

  game = Game.new(player_1, player_2, board)

  game.play
  end
end
